## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  APIs for managing user authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'This endpoint lets you register a new user in the system.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's full name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password (min 8 characters)."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: "The user's role (admin/agent/user)."
        required: false
        example: user
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: user@example.com
      password: password123
      role: user
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Registration successful. Please verify your email."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email has already been taken."],
              "password": ["The password confirmation does not match."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Authenticate a user and generate an API token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "User's email address."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "User's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "1|rtFcCPYcAGor6ZLnJX6RHGBjYzRd8JYfNC1Vdk8Z",
            "user": {
              "id": 1,
              "name": "John Doe",
              "email": "user@example.com",
              "role": "user",
              "email_verified_at": "2023-01-01T00:00:00.000000Z",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid credentials"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "Please verify your email first"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Request password reset'
      description: "Send a password reset link to the user's email."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "User's email address."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password reset link sent"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: 'Process the password reset form submission.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The reset token from the email.'
        required: true
        example: 1234abcd5678efgh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The new password (min 8 characters).'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmation of the new password.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      token: 1234abcd5678efgh
      email: user@example.com
      password: newpassword123
      password_confirmation: newpassword123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password has been reset successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "This password reset token is invalid."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: "Revoke all user's tokens."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Get authenticated user'
      description: "Returns the currently authenticated user's information."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "John Doe",
            "email": "user@example.com",
            "role": "user",
            "email_verified_at": "2023-01-01T00:00:00.000000Z",
            "created_at": "2023-01-01T00:00:00.000000Z",
            "updated_at": "2023-01-01T00:00:00.000000Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
