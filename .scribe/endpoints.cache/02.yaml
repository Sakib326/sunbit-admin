## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Location Management'
description: |-

  APIs for managing user location
endpoints:
  -
    httpMethods:
      - GET
    uri: api/locations/countries
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all countries'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      trashed:
        name: trashed
        description: 'Include soft deleted records.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: active
      trashed: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Bangladesh",
                "slug": "bangladesh",
                "code": "BD",
                "currency": "BDT",
                "currency_symbol": "৳",
                "status": "active",
                "created_at": "2023-04-29T10:00:00.000000Z",
                "updated_at": "2023-04-29T10:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/countries/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific country'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Bangladesh",
              "slug": "bangladesh",
              "code": "BD",
              "currency": "BDT",
              "currency_symbol": "৳",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/locations/countries
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new country'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the country.'
        required: true
        example: Bangladesh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the country (generated from name if not provided).'
        required: false
        example: bangladesh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      code:
        name: code
        description: 'The ISO code of the country.'
        required: true
        example: BD
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'The currency of the country.'
        required: false
        example: BDT
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      currency_symbol:
        name: currency_symbol
        description: 'The currency symbol.'
        required: false
        example: ৳
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Bangladesh
      slug: bangladesh
      code: BD
      currency: BDT
      currency_symbol: ৳
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Country created successfully",
            "data": {
              "id": 1,
              "name": "Bangladesh",
              "slug": "bangladesh",
              "code": "BD",
              "currency": "BDT",
              "currency_symbol": "৳",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/locations/countries/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a country'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the country.'
        required: false
        example: Bangladesh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the country.'
        required: false
        example: bangladesh
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The ISO code of the country.'
        required: false
        example: BD
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      currency:
        name: currency
        description: 'The currency of the country.'
        required: false
        example: BDT
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      currency_symbol:
        name: currency_symbol
        description: 'The currency symbol.'
        required: false
        example: ৳
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: Bangladesh
      slug: bangladesh
      code: BD
      currency: BDT
      currency_symbol: ৳
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Country updated successfully",
            "data": {
              "id": 1,
              "name": "Bangladesh",
              "slug": "bangladesh",
              "code": "BD",
              "currency": "BDT",
              "currency_symbol": "৳",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/locations/countries/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a country (soft delete)'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Country deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/locations/countries/{id}/restore'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft-deleted country'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Country restored successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/countries/{country_id}/states'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get states by country'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      country_id:
        name: country_id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      country_id: 1
    queryParameters:
      status:
        name: status
        description: 'Filter by status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      trashed:
        name: trashed
        description: 'Include soft deleted records.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: active
      trashed: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "country_id": 1,
                "name": "Dhaka",
                "slug": "dhaka",
                "code": "DHK",
                "status": "active",
                "created_at": "2023-04-29T10:00:00.000000Z",
                "updated_at": "2023-04-29T10:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/states/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific state'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the state.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "country_id": 1,
              "name": "Dhaka",
              "slug": "dhaka",
              "code": "DHK",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z",
              "country": {
                "id": 1,
                "name": "Bangladesh",
                "code": "BD"
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/locations/states
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new state'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: 'The ID of the country.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the state.'
        required: true
        example: Dhaka
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the state (generated from name if not provided).'
        required: false
        example: dhaka
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      code:
        name: code
        description: 'The state code.'
        required: false
        example: DHK
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      country_id: 1
      name: Dhaka
      slug: dhaka
      code: DHK
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "State created successfully",
            "data": {
              "id": 1,
              "country_id": 1,
              "name": "Dhaka",
              "slug": "dhaka",
              "code": "DHK",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/locations/states/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a state'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the state.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      country_id:
        name: country_id
        description: 'The ID of the country.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the state.'
        required: false
        example: Dhaka
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the state.'
        required: false
        example: dhaka
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The state code.'
        required: false
        example: DHK
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      country_id: 1
      name: Dhaka
      slug: dhaka
      code: DHK
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "State updated successfully",
            "data": {
              "id": 1,
              "country_id": 1,
              "name": "Dhaka",
              "slug": "dhaka",
              "code": "DHK",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/locations/states/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a state (soft delete)'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the state.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "State deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/locations/states/{id}/restore'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft-deleted state'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the state.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "State restored successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/states/{state_id}/zellas'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get zellas by state'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      state_id:
        name: state_id
        description: 'The ID of the state.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      state_id: 1
    queryParameters:
      status:
        name: status
        description: 'Filter by status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      trashed:
        name: trashed
        description: 'Include soft deleted records.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: active
      trashed: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "state_id": 1,
                "name": "Dhaka City",
                "slug": "dhaka-city",
                "code": "DHK-C",
                "status": "active",
                "created_at": "2023-04-29T10:00:00.000000Z",
                "updated_at": "2023-04-29T10:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/zellas/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific zella'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the zella.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "state_id": 1,
              "name": "Dhaka City",
              "slug": "dhaka-city",
              "code": "DHK-C",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z",
              "state": {
                "id": 1,
                "name": "Dhaka",
                "country_id": 1,
                "country": {
                  "id": 1,
                  "name": "Bangladesh"
                }
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/locations/zellas
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new zella'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      state_id:
        name: state_id
        description: 'The ID of the state.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the zella.'
        required: true
        example: 'Dhaka City'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the zella (generated from name if not provided).'
        required: false
        example: dhaka-city
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      code:
        name: code
        description: 'The zella code.'
        required: false
        example: DHK-C
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      state_id: 1
      name: 'Dhaka City'
      slug: dhaka-city
      code: DHK-C
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Zella created successfully",
            "data": {
              "id": 1,
              "state_id": 1,
              "name": "Dhaka City",
              "slug": "dhaka-city",
              "code": "DHK-C",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/locations/zellas/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a zella'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the zella.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      state_id:
        name: state_id
        description: 'The ID of the state.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the zella.'
        required: false
        example: 'Dhaka City'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the zella.'
        required: false
        example: dhaka-city
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The zella code.'
        required: false
        example: DHK-C
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      state_id: 1
      name: 'Dhaka City'
      slug: dhaka-city
      code: DHK-C
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Zella updated successfully",
            "data": {
              "id": 1,
              "state_id": 1,
              "name": "Dhaka City",
              "slug": "dhaka-city",
              "code": "DHK-C",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/locations/zellas/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a zella (soft delete)'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the zella.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Zella deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/locations/zellas/{id}/restore'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft-deleted zella'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the zella.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Zella restored successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/zellas/{zella_id}/upazillas'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upazillas by zella'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      zella_id:
        name: zella_id
        description: 'The ID of the zella.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      zella_id: 1
    queryParameters:
      status:
        name: status
        description: 'Filter by status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      trashed:
        name: trashed
        description: 'Include soft deleted records.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: active
      trashed: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "zella_id": 1,
                "name": "Gulshan",
                "slug": "gulshan",
                "code": "GLS",
                "postal_code": "1212",
                "status": "active",
                "created_at": "2023-04-29T10:00:00.000000Z",
                "updated_at": "2023-04-29T10:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/locations/upazillas/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific upazilla'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the upazilla.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "zella_id": 1,
              "name": "Gulshan",
              "slug": "gulshan",
              "code": "GLS",
              "postal_code": "1212",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z",
              "zella": {
                "id": 1,
                "name": "Dhaka City",
                "state_id": 1,
                "state": {
                  "id": 1,
                  "name": "Dhaka",
                  "country_id": 1
                }
              }
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/locations/upazillas
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new upazilla'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      zella_id:
        name: zella_id
        description: 'The ID of the zella.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the upazilla.'
        required: true
        example: Gulshan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the upazilla (generated from name if not provided).'
        required: false
        example: gulshan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      code:
        name: code
        description: 'The upazilla code.'
        required: false
        example: GLS
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      postal_code:
        name: postal_code
        description: 'The postal code.'
        required: false
        example: '1212'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      zella_id: 1
      name: Gulshan
      slug: gulshan
      code: GLS
      postal_code: '1212'
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Upazilla created successfully",
            "data": {
              "id": 1,
              "zella_id": 1,
              "name": "Gulshan",
              "slug": "gulshan",
              "code": "GLS",
              "postal_code": "1212",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/locations/upazillas/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an upazilla'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the upazilla.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      zella_id:
        name: zella_id
        description: 'The ID of the zella.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'The name of the upazilla.'
        required: false
        example: Gulshan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      slug:
        name: slug
        description: 'The slug for the upazilla.'
        required: false
        example: gulshan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      code:
        name: code
        description: 'The upazilla code.'
        required: false
        example: GLS
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      postal_code:
        name: postal_code
        description: 'The postal code.'
        required: false
        example: '1212'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      zella_id: 1
      name: Gulshan
      slug: gulshan
      code: GLS
      postal_code: '1212'
      status: active
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Upazilla updated successfully",
            "data": {
              "id": 1,
              "zella_id": 1,
              "name": "Gulshan",
              "slug": "gulshan",
              "code": "GLS",
              "postal_code": "1212",
              "status": "active",
              "created_at": "2023-04-29T10:00:00.000000Z",
              "updated_at": "2023-04-29T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/locations/upazillas/{id}'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an upazilla (soft delete)'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the upazilla.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Upazilla deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/locations/upazillas/{id}/restore'
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft-deleted upazilla'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the upazilla.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Upazilla restored successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/locations/hierarchy
    metadata:
      groupName: 'Location Management'
      groupDescription: |-

        APIs for managing user location
      subgroup: ''
      subgroupDescription: ''
      title: 'Get hierarchical location data'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by status (active/inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: active
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Bangladesh",
                "slug": "bangladesh",
                "code": "BD",
                "status": "active",
                "states": [
                  {
                    "id": 1,
                    "name": "Dhaka",
                    "slug": "dhaka",
                    "code": "DHK",
                    "status": "active",
                    "zellas": [
                      {
                        "id": 1,
                        "name": "Dhaka",
                        "slug": "dhaka-city",
                        "code": "DHK-C",
                        "status": "active",
                        "upazillas": [
                          {
                            "id": 1,
                            "name": "Gulshan",
                            "slug": "gulshan",
                            "code": "GLS",
                            "postal_code": "1212",
                            "status": "active"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
